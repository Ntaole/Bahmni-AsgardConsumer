version: '3.7'

x-default-logging: &default
  {}

x-loki-logging: &loki
  driver: loki
  options:
    loki-url: http://localhost:3100/loki/api/v1/push
    mode: non-blocking
    max-buffer-size: 4m
    loki-retries: "3"

x-log-config: &log-config
  # update this value to *loki if needed to see logs in grafana dashboard.
  <<: *default


services:

  proxy:
    image: 'bahmni/proxy:${PROXY_IMAGE_TAG:?}'
    #volumes:
      # - ${CERTIFICATE_PATH}:/etc/tls
    ports:
      - '80:80'
      - '443:443'
    logging: *log-config

  bahmni-config:
    image: 'bahmni/default-config:${CONFIG_IMAGE_TAG:?}'
    volumes:
      - '${CONFIG_VOLUME:?}:/usr/local/bahmni_config'
    logging: *log-config


  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:5.5.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8081'
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:9092'
 
  openmrsdb:
    image: ${OPENMRS_DB_IMAGE_NAME:?}
    restart: always
    ports:
      - 3306:3306
    #profiles: ["emr","bahmni-standard", "metabase", "bahmni-mart"]
    environment:
      MYSQL_ROOT_PASSWORD: dbz
      MYSQL_DATABASE: ${OPENMRS_DB_NAME:?}
      MYSQL_USER: ${OPENMRS_DB_USERNAME:?}
      MYSQL_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
    volumes:
       - ${PWD}/data/movies.sql:/docker-entrypoint-initdb.d/z99_dump.sql
       - 'openmrsdbdata:/var/lib/mysql'
     #  - './mysql.cnf:/etc/mysql/mysql.cnf'

    logging: *log-config

  connect-debezium:
    image: debezium/connect:1.2
    container_name: connect-debezium
    depends_on:
      - broker
      - openmrsdb
      - schema-registry
    ports:
      - 8083:8083
    environment:
      BOOTSTRAP_SERVERS: broker:9092
      GROUP_ID: connect-debezium
      CONFIG_STORAGE_TOPIC: docker-connect-debezium-configs
      OFFSET_STORAGE_TOPIC: docker-connect-debezium-offsets
      STATUS_STORAGE_TOPIC: docker-connect-debezium-status
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    volumes:
      - ${PWD}/scripts:/scripts


  odoo:
   # profiles: ["odoo","bahmni-standard"]
    image: 'bahmni/odoo-10:${ODOO_IMAGE_TAG:?[ERROR]}'
    ports:
      - '8069:8069'
    volumes:
      - odooappdata:/var/lib/odoo
      - ${EXTRA_ADDONS_PATH}:/mnt/extra-addons
      # # Uncomment the below volume only when you need to modify existing bahmni-addons. Also make sure to update the .env file variable with odoo-modules github repo cloned path.
      # - ${BAHMNI_ODOO_MODULES_PATH}:/opt/bahmni-erp/bahmni-addons
    depends_on:
      odoodb:
        condition: service_healthy
    environment:
      HOST: odoodb
      USER: ${ODOO_DB_USER}
      PASSWORD: ${ODOO_DB_PASSWORD}
    logging: *log-config

  odoodb:
    #profiles: ["odoo","bahmni-standard"]
    image: 'bahmni/odoo-10-db:${ODOO_DB_IMAGE_TAG:?[ERROR]}'
    volumes:
      - '${ODOO_DB_DUMP_PATH}:/resources/db-dump'
      - './data/mysql.cnf:/etc/mysql'
      - 'odoodbdata:/var/lib/postgresql/data'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U odoo']
      interval: 10s
      timeout: 5s
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ${ODOO_DB_PASSWORD}
      POSTGRES_USER: ${ODOO_DB_USER}
    logging: *log-config

  openmrs:
   # profiles: ["emr","bahmni-standard", "bahmni-mart"]
    image: bahmni/openmrs:${OPENMRS_IMAGE_TAG:?}
    environment:
      OMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OMRS_DB_HOSTNAME: ${OPENMRS_DB_HOST:?}
      OMRS_DB_USERNAME: ${OPENMRS_DB_USERNAME:?}
      OMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
      OMRS_CREATE_TABLES: ${OPENMRS_DB_CREATE_TABLES}
      OMRS_AUTO_UPDATE_DATABASE: ${OPENMRS_DB_AUTO_UPDATE}
      OMRS_MODULE_WEB_ADMIN: ${OPENMRS_MODULE_WEB_ADMIN}
      # OMRS_DEV_DEBUG_PORT: ${OMRS_DEV_DEBUG_PORT}
      OMRS_JAVA_SERVER_OPTS: ${OMRS_JAVA_SERVER_OPTS}
      OMRS_JAVA_MEMORY_OPTS: ${OMRS_JAVA_MEMORY_OPTS}
      OPENELIS_HOST: ${OPENELIS_HOST:?}
      OPENELIS_PORT: ${OPENELIS_PORT:?}
      OPENELIS_ATOMFEED_USER: ${OPENELIS_ATOMFEED_USER:?}
      OPENELIS_ATOMFEED_PASSWORD: ${OPENELIS_ATOMFEED_PASSWORD:?}
      SEND_MAIL: ${SEND_MAIL}
      MAIL_TRANSPORT_PROTOCOL: ${MAIL_TRANSPORT_PROTOCOL}
      MAIL_SMTP_HOST: ${MAIL_SMTP_HOST}
      MAIL_SMTP_PORT: ${MAIL_SMTP_PORT}
      MAIL_SMTP_AUTH: ${MAIL_SMTP_AUTH}
      MAIL_SMTP_STARTTLS_ENABLE: ${MAIL_SMTP_STARTTLS_ENABLE}
      MAIL_SMTP_SSL_ENABLE: ${MAIL_SMTP_SSL_ENABLE}
      MAIL_DEBUG: ${MAIL_DEBUG}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      OMRS_C3P0_MAX_SIZE: ${OMRS_C3P0_MAX_SIZE}
    #ports:
      # - ${OMRS_DEV_DEBUG_PORT}:${OMRS_DEV_DEBUG_PORT}
    volumes:
      - "${CONFIG_VOLUME:?}:/etc/bahmni_config/:ro"
      # - "${BAHMNI_OPENMRS_MODULES_PATH:?}/:/openmrs/data/modules/"
      - 'bahmni-patient-images:/home/bahmni/patient_images'
      - 'bahmni-document-images:/home/bahmni/document_images'
      - 'bahmni-clinical-forms:/home/bahmni/clinical_forms'
    depends_on:
      - openmrsdb
    logging: *log-config

  bahmni-web:
    image: bahmni/bahmni-web:${BAHMNI_WEB_IMAGE_TAG:?}
   # profiles: ["emr","bahmni-standard","bahmni-mart"]
    volumes:
      - "${CONFIG_VOLUME:?}:/usr/local/apache2/htdocs/bahmni_config/:ro"
    #   - "${BAHMNI_APPS_PATH:?}/ui/app/:/usr/local/apache2/htdocs/bahmni"
    #   - "${BAHMNI_APPS_PATH:?}/ui/node_modules/@bower_components/:/usr/local/apache2/htdocs/bahmni/components"
    logging: *log-config

  implementer-interface:
    image: bahmni/implementer-interface:${IMPLEMENTER_INTERFACE_IMAGE_TAG:?}
    #profiles: ["implementer-interface","emr","bahmni-standard"]
    #volumes:
    #  - "${IMPLEMENTER_INTERFACE_CODE_PATH:?}/dist:/usr/local/apache2/htdocs/implementer_interface"
    depends_on:
      - openmrs
    logging: *log-config

  reports:
    image: bahmni/reports:${REPORTS_IMAGE_TAG:?}
    #profiles: ["reports","bahmni-standard"]
    environment:
      OPENMRS_DB_HOST: ${OPENMRS_DB_HOST:?}
      OPENMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OPENMRS_DB_USERNAME: ${OPENMRS_DB_USERNAME:?}
      OPENMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENELIS_DB_SERVER: ${OPENELIS_DB_SERVER}
      REPORTS_DB_SERVER: reportsdb
      REPORTS_DB_NAME: ${REPORTS_DB_NAME:?}
      REPORTS_DB_USERNAME: ${REPORTS_DB_USERNAME:?}
      REPORTS_DB_PASSWORD: ${REPORTS_DB_PASSWORD:?}
      ODOO_DB_SERVER: odoodb
      ODOO_DB_USERNAME: ${ODOO_DB_USER:?}
      ODOO_DB_PASSWORD: ${ODOO_DB_PASSWORD:?}
    volumes:
      - "${CONFIG_VOLUME:?}:/etc/bahmni_config/:ro"
    depends_on:
      - reportsdb
      - openmrsdb
      - bahmni-web
    logging: *log-config

  reportsdb:
    platform: linux/amd64
    image: mysql:5.6
    #profiles: ["reports","bahmni-standard"]
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      MYSQL_DATABASE: ${REPORTS_DB_NAME:?}
      MYSQL_USER: ${REPORTS_DB_USERNAME:?}
      MYSQL_PASSWORD: ${REPORTS_DB_PASSWORD:?}
    logging: *log-config

  patient-documents:
    image: 'bahmni/patient-documents:${PATIENT_DOCUMENTS_TAG:?}'
   # profiles: ["emr","bahmni-standard"]
    volumes:
      - 'bahmni-document-images:/usr/share/nginx/html/document_images'
      - 'bahmni-lab-results:/usr/share/nginx/html/uploaded_results'
    environment:
      - OPENMRS_HOST=${OPENMRS_HOST:?}
    depends_on:
      - openmrs
    logging: *log-config

  appointments:
    image: bahmni/appointments:${APPOINTMENTS_IMAGE_TAG:?}
    profiles: ["emr","bahmni-standard"]
    # volumes:
    # - "${APPOINTMENTS_PATH:?}/dist/:/usr/local/apache2/htdocs/appointments"
  asgardconsumer:
    build: .
    environment:
      - ODOODBURL=jdbc:postgresql://odoodb:5432/odoo
      - OPENMRSDBURL=jdbc:mysql://openmrsdb:3306/openmrs
      - KAFKABOOTSTRAPERVER=broker:9092
    depends_on:
      - odoodb
      - openmrsdb
      - broker
  atomfeed-console:
    image: bahmni/atomfeed-console:latest
    profiles: ["atomfeed-console"]
    environment:
      OPENMRS_DB_HOST: ${OPENMRS_DB_HOST}
      OPENMRS_DB_NAME: ${OPENMRS_DB_NAME}
      OPENMRS_DB_USERNAME: ${OPENMRS_DB_USERNAME}
      OPENMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD}
      ODOO_DB_HOST: ${ODOO_DB_HOST}
      ODOO_DB_NAME: ${ODOO_DB_NAME}
      ODOO_DB_USER: ${ODOO_DB_USER}
      ODOO_DB_PASSWORD: ${ODOO_DB_PASSWORD}
      OPENELIS_DB_HOST: ${OPENELIS_DB_HOST}
      OPENELIS_DB_USER: ${OPENELIS_DB_USER}
      OPENELIS_DB_PASSWORD: ${OPENELIS_DB_PASSWORD}
      PACS_INTEGRATION_DB_HOST: ${PACS_DB_HOST}
      PACS_INTEGRATION_DB_NAME: ${PACS_INTEGRATION_DB_NAME}
      PACS_INTEGRATION_DB_USERNAME: ${PACS_INTEGRATION_DB_USERNAME}
      PACS_INTEGRATION_DB_PASSWORD: ${PACS_INTEGRATION_DB_PASSWORD}



volumes:
  openelisdbdata:
  odoodbdata:
  odooappdata:
  openmrs-data:
  openmrsdbdata:
  metabase-data:
  mart-data:
  bahmni-patient-images:
  bahmni-document-images:
  bahmni-clinical-forms:
  dcm4chee-archive:
  bahmni-config:
  bahmni-lab-results:
  bahmni-lab-files: